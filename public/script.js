const API_BASE = '/api';
// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const App = {
     lastBookingData: null,
     paymentButtonClicked: false,
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    init() {
        console.log('Usupovo Life Hall –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        this.setupEventListeners();
        this.loadEventsFromAPI();
    },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners() {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.querySelector('.close').addEventListener('click', () => {
            this.closeModal();
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        window.addEventListener('click', (event) => {
            const modal = document.getElementById('bookingModal');
            if (event.target === modal) {
                this.closeModal();
            }
        });
    },
    
        // –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
    async loadEventsFromAPI() {
        try {
            console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞...');
            
            const response = await fetch(`${API_BASE}/events`);
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const events = await response.json();
            console.log('‚úÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', events);
            
            this.displayEvents(events);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:', error);
            // Fallback - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            console.log('üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è');
            const sampleEvents = [
                {
                    id: 1,
                    name: "–î–∂–∞–∑–æ–≤—ã–π –≤–µ—á–µ—Ä —Å –ê–Ω—Å–∞–º–±–ª–µ–º '–ù–æ—Å—Ç–∞–ª—å–∂–∏'",
                    date: "2024-12-15T19:00:00",
                    description: "–ù–µ–∑–∞–±—ã–≤–∞–µ–º—ã–π –≤–µ—á–µ—Ä –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ –¥–∂–∞–∑–∞",
                    image_url: "jazz.jpg"
                },
                {
                    id: 2, 
                    name: "–°—Ç–µ–Ω–¥–∞–ø —à–æ—É '–°–º–µ—Ö –¥–æ —Å–ª—ë–∑'",
                    date: "2024-12-20T20:00:00",
                    description: "–¢–æ–ø–æ–≤—ã–µ –∫–æ–º–∏–∫–∏ —Å—Ç—Ä–∞–Ω—ã –≤ –æ–¥–Ω–æ–º —à–æ—É",
                    image_url: "comedy.jpg"
                }
            ];
            this.displayEvents(sampleEvents);
        }
    },
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    displayEvents(events) {
        const container = document.getElementById('eventsContainer');
        window.allEvents = events;
        if (!events || events.length === 0) {
            container.innerHTML = `
                <div class="loading">
                    <p>üé≠ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</p>
                    <p><small>–°–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ!</small></p>
                </div>
            `;
            return;
        }
        
        container.innerHTML = events.map(event => `
            <div class="event-card" data-event-id="${event.id}">
                <div class="event-image">
                    ${event.image_url ? 
                        `<img src="images/${event.image_url}" alt="${event.name}" 
                              style="width:100%;height:100%;object-fit:cover;" 
                              onerror="this.style.display='none'">` : 
                        '<div style="display:flex;align-items:center;justify-content:center;height:100%;">üé≠</div>'
                    }
                </div>
                <div class="event-info">
                    <h3>${event.name}</h3>
                    <div class="event-date">${this.formatDate(event.date)}</div>
                    <p>${event.description || '–û–ø–∏—Å–∞–Ω–∏–µ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è...'}</p>
                    <button class="book-button" onclick="App.showEventDetails(${event.id})">
                        ‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏
                    </button>
                </div>
            </div>
        `).join('');
    },
    
    // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–≤–µ–∑–¥ —Ä–µ–π—Ç–∏–Ω–≥–∞
    generateRatingStars(rating) {
        let stars = '';
        for (let i = 1; i <= 5; i++) {
            if (i <= rating) {
                stars += '<span class="star">‚òÖ</span>';
            } else {
                stars += '<span class="star empty">‚òÖ</span>';
            }
        }
        return stars;
    },
    
    // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã (–ë–ï–ó –≥–æ–¥–∞ –∏ –¥–Ω—è –Ω–µ–¥–µ–ª–∏)
    formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('ru-RU', {
            day: 'numeric',
            month: 'long',
            hour: '2-digit', 
            minute: '2-digit'
        });
    },
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –º–µ—Å—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞
    async openBookingModal(eventId) {
        console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', eventId);
        
        this.currentEventId = eventId;
        if (!this.currentEventName) {
            try {
                const events = await fetch(`${API_BASE}/events`).then(r => r.json());
                const event = events.find(e => e.id === eventId);
                if (event) {
                    this.currentEventName = event.name;
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', error);
            }
        }
        this.selectedSeats = new Map();
        
        const modal = document.getElementById('bookingModal');
        const modalBody = document.getElementById('modalBody');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        modalBody.innerHTML = `
            <div style="text-align: center; padding: 2rem;">
                <div style="font-size: 3rem;">‚è≥</div>
                <p>–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ö–µ–º—É –∑–∞–ª–∞...</p>
            </div>
        `;
        
        modal.style.display = 'block';
        
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ—Å—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
            const response = await fetch(`${API_BASE}/seats/event/${eventId}`);
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const seats = await response.json();
            console.log('‚úÖ –ú–µ—Å—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', seats);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è
            const events = await fetch(`${API_BASE}/events`).then(r => r.json());
            const event = events.find(e => e.id === eventId);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
            if (event) {
                this.currentEventName = event.name;
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            this.showBookingForm(event, seats);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Å—Ç:', error);
            this.showBookingError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ö–µ–º—É –∑–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    },
    // –ü–æ–∫–∞–∑ —Ñ–æ—Ä–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    showBookingForm(event, seats) {
        const modalBody = document.getElementById('modalBody');
        
        modalBody.innerHTML = `
            <div style="max-height: 70vh; overflow-y: auto;">
                <h3 style="margin-bottom: 1rem;">üé≠ ${event.name}</h3>
                
                <!-- –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Å—Ö–µ–º–∞ –∑–∞–ª–∞ -->
                <div class="seat-map">
                    <div class="stage">üé™ –°–¶–ï–ù–ê</div>
                    <div class="seats-grid" id="seatMapContainer">
                        ${this.generateSeatMapFromAPI(seats)}
                    </div>
                    <div class="seat-legend">
                        <div class="legend-item"><div class="legend-color seat-free"></div><span>–°–≤–æ–±–æ–¥–Ω–æ</span></div>
                        <div class="legend-item"><div class="legend-color seat-selected"></div><span>–í—ã–±—Ä–∞–Ω–æ</span></div>
                        <div class="legend-item"><div class="legend-color seat-vip"></div><span>VIP</span></div>
                        <div class="legend-item"><div class="legend-color seat-occupied"></div><span>–ó–∞–Ω—è—Ç–æ</span></div>
                    </div>
                </div>
                
                <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±–æ—Ä–µ -->
                <div class="selection-info">
                    <div id="selectedSeatsInfo">
                        <p>üëÜ –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–∞ –Ω–∞ —Å—Ö–µ–º–µ –≤—ã—à–µ</p>
                    </div>
                </div>
            </div>
            
            <!-- –ö–Ω–æ–ø–∫–∏ -->
            <div class="form-actions">
                <button onclick="App.closeModal()" class="btn-secondary">
                    ‚ùå –û—Ç–º–µ–Ω–∞
                </button>
                <button onclick="App.goToCustomerForm()" class="btn-primary" id="nextToStep2" disabled>
                    ‚úÖ –î–∞–ª–µ–µ ‚Ä∫
                </button>
            </div>
        `;
    },
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ö–µ–º—ã –∑–∞–ª–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö API
    generateSeatMapFromAPI(seats) {
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –º–µ—Å—Ç–∞ –ø–æ —Ä—è–¥–∞–º
        const rows = {};
        seats.forEach(seat => {
            const row = seat.seat_label.charAt(0);
            if (!rows[row]) {
                rows[row] = [];
            }
            rows[row].push(seat);
        });
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä—è–¥—ã
        const sortedRows = Object.keys(rows).sort();
        
        let html = '';
        sortedRows.forEach(row => {
            html += `<div class="seat-row">`;
            html += `<div class="row-label">${row}</div>`;
            
            // –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ—Å—Ç–∞ –≤ —Ä—è–¥—É
            rows[row].sort((a, b) => a.seat_number - b.seat_number);
            
            rows[row].forEach(seat => {
                const status = seat.status === 'occupied' ? 'seat-occupied' : 'seat-free';
                const vipClass = seat.category === 'vip' ? 'seat-vip' : '';
                const isOccupied = seat.status === 'occupied';
                
                html += `
                    <button class="seat ${status} ${vipClass}" 
                            onclick="App.selectSeatFromAPI('${seat.seat_label}', ${seat.id}, ${seat.price}, '${seat.category}')"
                            ${isOccupied ? 'disabled' : ''}
                            title="–ú–µ—Å—Ç–æ ${seat.seat_label} - ${seat.category === 'vip' ? 'VIP' : '–°—Ç–∞–Ω–¥–∞—Ä—Ç'} - ${seat.price} ‚ÇΩ">
                        ${seat.seat_label || seat.label}
                    </button>
                `;
            });
            
            html += `</div>`;
        });
        
        return html;
    },
    // –í—ã–±–æ—Ä –º–µ—Å—Ç–∞ (API –≤–µ—Ä—Å–∏—è)
    selectSeatFromAPI(seatLabel, seatId, price, category) {
        console.log('–í—ã–±–∏—Ä–∞–µ–º –º–µ—Å—Ç–æ:', seatLabel, seatId, price, category);
        
        const seatElement = document.querySelector(`.seat[onclick*="${seatLabel}"]`);
        if (!seatElement) return;
        
        const seatData = {
            id: seatId,
            label: seatLabel,
            price: price,
            category: category,
            type: category === 'vip' ? 'VIP' : 'Standard'
        };
        
        if (seatElement.classList.contains('seat-selected')) {
            // –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞
            seatElement.classList.remove('seat-selected');
            seatElement.classList.add('seat-free');
            if (category === 'vip') {
                seatElement.classList.add('seat-vip');
            }
            this.selectedSeats.delete(seatLabel);
        } else {
            // –í—ã–±–æ—Ä –º–µ—Å—Ç–∞
            seatElement.classList.remove('seat-free', 'seat-vip');
            seatElement.classList.add('seat-selected');
            this.selectedSeats.set(seatLabel, seatData);
        }
        
        this.updateSelectionInfo();
    },
// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ—Å–ª–µ –º–µ—Ç–æ–¥–∞ selectSeatFromAPI
updateSelectionInfo() {
    const infoElement = document.getElementById('selectedSeatsInfo');
    const nextButton = document.getElementById('nextToStep2');
    
    if (!this.selectedSeats || this.selectedSeats.size === 0) {
        infoElement.innerHTML = '<p>üëÜ –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–∞ –Ω–∞ —Å—Ö–µ–º–µ –≤—ã—à–µ</p>';
        if (nextButton) nextButton.disabled = true;
        return;
    }
    
    let total = 0;
    const seatsList = Array.from(this.selectedSeats.values()).map(seat => {
        total += seat.price;
        return `<div>üìç ${seat.label} (${seat.type}) - ${seat.price} ‚ÇΩ</div>`;
    }).join('');
    
    infoElement.innerHTML = `
        <h4>‚úÖ –í—ã–±—Ä–∞–Ω–æ –º–µ—Å—Ç: ${this.selectedSeats.size}</h4>
        ${seatsList}
        <div style="margin-top: 1rem; font-weight: bold; border-top: 1px solid #ddd; padding-top: 0.5rem;">
            üí∞ –ò—Ç–æ–≥–æ: ${total} ‚ÇΩ
        </div>
    `;
    
    if (nextButton) {
        nextButton.disabled = false;
    }
},
// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π —Å—Ö–µ–º—ã –∑–∞–ª–∞
generateCompactSeatMap() {
    const container = document.getElementById('seatMapContainer');
    const rows = ['A', 'B', 'C', 'D']; // –ú–µ–Ω—å—à–µ —Ä—è–¥–æ–≤
    
    let html = '';
    
    rows.forEach(row => {
        html += `<div class="seat-row">`;
        html += `<div class="row-label">${row}</div>`;
        
        // 6 –º–µ—Å—Ç –≤ —Ä—è–¥—É –≤–º–µ—Å—Ç–æ 8
        for (let i = 1; i <= 6; i++) {
            const seatId = `${row}${i}`;
            const isVip = row === 'A' || row === 'B';
            
            html += `
                <button class="seat seat-free ${isVip ? 'seat-vip' : ''}" 
                        onclick="App.selectSeat('${seatId}')"
                        title="–ú–µ—Å—Ç–æ ${seatId} - ${isVip ? 'VIP' : '–°—Ç–∞–Ω–¥–∞—Ä—Ç'}">
                    ${i}
                </button>
            `;
        }
        
        html += `</div>`;
    });
    
    container.innerHTML = html;
},

// –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã –∑–∞–ª–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
createHallLayout() {
    const rows = ['A', 'B', 'C', 'D', 'E', 'F'];
    const layout = [];
    
    rows.forEach((row, rowIndex) => {
        const seatsInRow = row === 'A' ? 6 : 8;
        const rowSeats = [];
        
        for (let i = 1; i <= seatsInRow; i++) {
            const seatId = `${row}${i}`;
            const isVip = row === 'A' || row === 'B';
            // –£–ë–ò–†–ê–ï–ú —Å–ª—É—á–∞–π–Ω—É—é –∑–∞–Ω—è—Ç–æ—Å—Ç—å - –≤—Å–µ –º–µ—Å—Ç–∞ —Å–≤–æ–±–æ–¥–Ω—ã
            const isOccupied = false; // –í—Å–µ –º–µ—Å—Ç–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–≤–æ–±–æ–¥–Ω—ã
            
            rowSeats.push({
                id: seatId,
                number: i,
                row: row,
                type: isVip ? 'seat-vip' : '',
                status: isOccupied ? 'seat-occupied' : 'seat-free',
                price: isVip ? 2500 : 1500,
                category: isVip ? 'vip' : 'standard'
            });
        }
        
        layout.push({
            row: row,
            seats: rowSeats
        });
    });
    
    return layout;
},

// –ü—Ä–æ—Å—Ç–æ–π –≤—ã–±–æ—Ä –º–µ—Å—Ç–∞
selectSeat(seatId) {
    console.log('–í—ã–±–∏—Ä–∞–µ–º –º–µ—Å—Ç–æ:', seatId);
    
    const seatElement = document.querySelector(`.seat[onclick="App.selectSeat('${seatId}')"]`);
    if (!seatElement) return;
    
    const isVip = seatId.startsWith('A') || seatId.startsWith('B');
    const seatData = {
        id: seatId,
        price: isVip ? 2500 : 1500,
        type: isVip ? 'VIP' : 'Standard'
    };
    
    if (seatElement.classList.contains('seat-selected')) {
        // –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞
        seatElement.classList.remove('seat-selected');
        seatElement.classList.add('seat-free');
        this.selectedSeats.delete(seatId);
    } else {
        // –í—ã–±–æ—Ä –º–µ—Å—Ç–∞
        seatElement.classList.remove('seat-free');
        seatElement.classList.add('seat-selected');
        this.selectedSeats.set(seatId, seatData);
    }
    
    this.updateCompactSelectionInfo();
},

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±–æ—Ä–µ - –ü–†–û–°–¢–ê–Ø –í–ï–†–°–ò–Ø
updateCompactSelectionInfo() {
    const infoElement = document.getElementById('selectedSeatsInfo');
    const nextButton = document.getElementById('nextToStep2');
    
    if (!this.selectedSeats || this.selectedSeats.size === 0) {
        infoElement.innerHTML = '<p>üëÜ –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–∞ –Ω–∞ —Å—Ö–µ–º–µ –≤—ã—à–µ</p>';
        if (nextButton) nextButton.disabled = true;
        return;
    }
    
    let total = 0;
    const seatsList = Array.from(this.selectedSeats.values()).map(seat => {
        total += seat.price;
        return `<div>üìç ${seat.id} (${seat.type}) - ${seat.price} ‚ÇΩ</div>`;
    }).join('');
    
    infoElement.innerHTML = `
        <h4>‚úÖ –í—ã–±—Ä–∞–Ω–æ –º–µ—Å—Ç: ${this.selectedSeats.size}</h4>
        ${seatsList}
        <div style="margin-top: 1rem; font-weight: bold; border-top: 1px solid #ddd; padding-top: 0.5rem;">
            üí∞ –ò—Ç–æ–≥–æ: ${total} ‚ÇΩ
        </div>
    `;
    
    if (nextButton) {
        nextButton.disabled = false;
        console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ" –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!');
    }
},

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø)
addSeatToSelection(seatId, seatData) {
    if (!this.selectedSeats) {
        this.selectedSeats = new Map();
    }
    
    this.selectedSeats.set(seatId, seatData);
    console.log('–í—ã–±—Ä–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞:', Array.from(this.selectedSeats.keys()));
},

// –£–¥–∞–ª–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
removeSeatFromSelection(seatId) {
    if (this.selectedSeats) {
        this.selectedSeats.delete(seatId);
    }
},

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –º–µ—Å—Ç–µ
getSeatData(seatId) {
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
    const isVip = seatId.startsWith('A') || seatId.startsWith('B');
    return {
        id: seatId,
        number: seatId,
        type: isVip ? 'VIP' : 'Standard',
        price: isVip ? 2500 : 1500
    };
},

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤
getRussianPlural(number, one, two, five) {
    let n = Math.abs(number);
    n %= 100;
    if (n >= 5 && n <= 20) {
        return five;
    }
    n %= 10;
    if (n === 1) {
        return one;
    }
    if (n >= 2 && n <= 4) {
        return two;
    }
    return five;
},

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º
goToStep(stepNumber) {
    console.log('–ü–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É:', stepNumber);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —à–∞–≥–∏
    document.querySelectorAll('.booking-step').forEach(step => {
        step.classList.remove('active');
    });
    
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ –≤—Å–µ—Ö —à–∞–≥–æ–≤ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.querySelectorAll('.booking-steps .step').forEach(step => {
        step.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–≥
    const stepElement = document.getElementById(`step${stepNumber}`);
    const stepNavElement = document.querySelector(`.step[data-step="${stepNumber}"]`);
    
    if (stepElement && stepNavElement) {
        stepElement.classList.add('active');
        stepNavElement.classList.add('active');
    }
    
    // –ï—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —à–∞–≥—É 3, –∑–∞–ø–æ–ª–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    if (stepNumber === 3) {
        this.prepareConfirmation();
    }
},

// –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
prepareConfirmation() {
    const confirmationElement = document.getElementById('confirmationDetails');
    
    if (!this.selectedSeats || this.selectedSeats.size === 0) {
        confirmationElement.innerHTML = '<p>–û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω—ã –º–µ—Å—Ç–∞</p>';
        return;
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const formData = {
        name: document.getElementById('customerName').value,
        email: document.getElementById('customerEmail').value,
        phone: document.getElementById('customerPhone').value
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º—ã
    if (!formData.name || !formData.email || !formData.phone) {
        confirmationElement.innerHTML = `
            <p style="color: #e74c3c;">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ</p>
        `;
        return;
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ
    let total = 0;
    const seatsDetails = Array.from(this.selectedSeats.values()).map(seat => {
        total += seat.price;
        return `<li>–ú–µ—Å—Ç–æ ${seat.id} (${seat.type}) - ${seat.price} ‚ÇΩ</li>`;
    }).join('');
    
    confirmationElement.innerHTML = `
        <div class="confirmation-section">
            <h6>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</h6>
            <p><strong>–ò–º—è:</strong> ${formData.name}</p>
            <p><strong>Email:</strong> ${formData.email}</p>
            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${formData.phone}</p>
        </div>
        
        <div class="confirmation-section">
            <h6>–í—ã–±—Ä–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞:</h6>
            <ul>
                ${seatsDetails}
            </ul>
        </div>
        
        <div class="confirmation-total">
            <h6>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${total} ‚ÇΩ</h6>
        </div>
        
        <div class="confirmation-notice">
            <p><small>–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ –≤–∞—à email –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±–∏–ª–µ—Ç —Å QR-–∫–æ–¥–æ–º.</small></p>
        </div>
    `;
},

// –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
finalizeBooking(eventId) {
    console.log('–§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', eventId);
    
    if (!this.selectedSeats || this.selectedSeats.size === 0) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–∞');
        return;
    }
    
    const formData = {
        name: document.getElementById('customerName').value,
        email: document.getElementById('customerEmail').value,
        phone: document.getElementById('customerPhone').value
    };
    
    // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.name || !formData.email || !formData.phone) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
        return;
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const bookingData = {
        eventId: eventId,
        customerName: formData.name,
        customerEmail: formData.email,
        customerPhone: formData.phone,
        seats: Array.from(this.selectedSeats.values()),
        totalAmount: Array.from(this.selectedSeats.values()).reduce((sum, seat) => sum + seat.price, 0),
        bookingTime: new Date().toISOString(),
        bookingId: 'B' + Date.now() // –í—Ä–µ–º–µ–Ω–Ω—ã–π ID –±—Ä–æ–Ω–∏
    };
    
    console.log('–§–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', bookingData);
    this.showBookingSuccess(bookingData);
},

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
processBookingForm(eventId) {
    console.log('processBookingForm –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è eventId:', eventId);
    
    const form = document.getElementById('bookingForm');
    const formData = new FormData(form);
    
    // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    const name = document.getElementById('customerName').value.trim();
    const email = document.getElementById('customerEmail').value.trim();
    const ticketCount = document.getElementById('ticketCount').value;
    
    if (!name) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è');
        return;
    }
    
    if (!email) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ email');
        return;
    }
    
    if (!ticketCount) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤');
        return;
    }
    
    // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è email
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
        return;
    }
    
    const bookingData = {
        eventId: eventId,
        customerName: name,
        customerEmail: email,
        customerPhone: document.getElementById('customerPhone').value,
        ticketCount: parseInt(ticketCount),
        specialRequests: document.getElementById('specialRequests')?.value || '',
        bookingTime: new Date().toISOString()
    };
    
    console.log('–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', bookingData);
    this.showBookingSuccess(bookingData);
},
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã
    setupFormValidation() {
        const inputs = document.querySelectorAll('#bookingForm input');
        inputs.forEach(input => {
            input.addEventListener('blur', (e) => {
                this.validateField(e.target);
            });
            
            input.addEventListener('input', (e) => {
                this.clearError(e.target);
            });
        });
    },
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è
    validateField(field) {
        const errorElement = document.getElementById(field.name + 'Error');
        
        if (!field.value.trim()) {
            this.showError(field, '–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
            return false;
        }
        
        if (field.type === 'email') {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(field.value)) {
                this.showError(field, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
                return false;
            }
        }
        
        this.clearError(field);
        return true;
    },
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
    showError(field, message) {
        const errorElement = document.getElementById(field.name + 'Error');
        errorElement.textContent = message;
        field.style.borderColor = '#e74c3c';
    },
    
    // –û—á–∏—Å—Ç–∏—Ç—å –æ—à–∏–±–∫—É
    clearError(field) {
        const errorElement = document.getElementById(field.name + 'Error');
        errorElement.textContent = '';
        field.style.borderColor = '#ddd';
    },
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
handleBooking(event, eventId) {
    console.log('=== handleBooking –≤—ã–∑–≤–∞–Ω–∞ ===');
    console.log('eventId:', eventId);
    
    event.preventDefault();
    console.log('–§–æ—Ä–º–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∞ –æ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏');
    
    const form = event.target;
    console.log('–§–æ—Ä–º–∞ –Ω–∞–π–¥–µ–Ω–∞:', form);
    
    const formData = new FormData(form);
    console.log('FormData —Å–æ–∑–¥–∞–Ω');

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
    let isValid = true;
    const fields = form.querySelectorAll('input[required]');
    console.log('–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:', fields.length);
    
    fields.forEach(field => {
        console.log('–í–∞–ª–∏–¥–∏—Ä—É–µ–º –ø–æ–ª–µ:', field.name, '–∑–Ω–∞—á–µ–Ω–∏–µ:', field.value);
        if (!this.validateField(field)) {
            isValid = false;
            console.log('–ü–æ–ª–µ –Ω–µ –ø—Ä–æ—à–ª–æ –≤–∞–ª–∏–¥–∞—Ü–∏—é:', field.name);
        }
    });
    
    console.log('–§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞:', isValid);
    
    if (!isValid) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º–µ');
        return;
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const bookingData = {
        eventId: eventId,
        customerName: formData.get('customerName'),
        customerEmail: formData.get('customerEmail'),
        customerPhone: formData.get('customerPhone'),
        ticketCount: parseInt(formData.get('ticketCount')),
        specialRequests: formData.get('specialRequests'),
        bookingTime: new Date().toISOString()
    };
    
    console.log('–î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', bookingData);
    this.showBookingSuccess(bookingData);
},
// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è (–ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –º–µ—Å—Ç)
goToCustomerForm() {
    if (!this.selectedSeats || this.selectedSeats.size === 0) {
        alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–∞');
        return;
    }
    
    const modalBody = document.getElementById('modalBody');
    const total = Array.from(this.selectedSeats.values()).reduce((sum, seat) => sum + seat.price, 0);
    
    modalBody.innerHTML = `
        <div style="max-height: 70vh; overflow-y: auto;">
            <h3>üìù –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</h3>
            
            <div style="background: #e8f4fd; padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                <strong>–í—ã –≤—ã–±—Ä–∞–ª–∏ ${this.selectedSeats.size} –º–µ—Å—Ç</strong><br>
                üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: <strong>${total} ‚ÇΩ</strong>
            </div>
            
            <form id="customerForm">
                <div class="form-group">
                    <label for="customerName">–í–∞—à–µ –∏–º—è *</label>
                    <input type="text" id="customerName" required placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤">
                </div>
                
                <div class="form-group">
                    <label for="customerEmail">Email *</label>
                    <input type="email" id="customerEmail" required placeholder="ivan@example.com">
                </div>
                
                <div class="form-group">
                    <label for="customerPhone">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                    <input type="tel" id="customerPhone" required placeholder="+7 (900) 123-45-67">
                </div>
            </form>
        </div>
        
        <div class="form-actions">
            <button onclick="App.backToSeatSelection()" class="btn-secondary">
                ‚Äπ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –º–µ—Å—Ç
            </button>
            <button onclick="App.proceedToPayment()" class="btn-primary">
                üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ
            </button>
        </div>
    `;
},
// –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
async showEventDetails(eventId) {
    console.log('üìñ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', eventId);
    
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        const response = await fetch(`${API_BASE}/events/${eventId}`);
        if (!response.ok) {
            throw new Error('–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        }
        
        const event = await response.json();
        this.showEventDetailsModal(event);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', error);
        // Fallback - –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        const events = await fetch(`${API_BASE}/events`).then(r => r.json());
        const event = events.find(e => e.id === eventId);
        if (event) {
            this.showEventDetailsModal(event);
        } else {
            alert('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏');
        }
    }
},

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
showEventDetailsModal(event) {
    const modal = document.getElementById('bookingModal');
    const modalBody = document.getElementById('modalBody');
    this.currentEventId = event.id;
    this.currentEventName = event.name; // ‚Üê –í–ê–ñ–ù–û: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
    const eventDate = this.formatDate(event.date);
    
    modalBody.innerHTML = `
        <div style="max-height: 60vh; overflow-y: auto; margin-bottom: 1rem;">
            <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ -->
            <div style="text-align: center; margin-bottom: 1.5rem;">
                <h3 style="color: #2c3e50; margin-bottom: 1rem;">${event.name}</h3>
                <div style="width: 100%; height: 200px; border-radius: 10px; overflow: hidden; margin: 0 auto;">
                    ${event.image_url ? 
                        `<img src="images/${event.image_url}" alt="${event.name}" 
                              style="width:100%;height:100%;object-fit:cover;">` : 
                        '<div style="display:flex;align-items:center;justify-content:center;height:100%;background:linear-gradient(135deg, #667eea, #764ba2);color:white;font-size:2rem;">üé≠</div>'
                    }
                </div>
            </div>
            
            <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ -->
            <div style="background: #f8f9fa; padding: 1.5rem; border-radius: 10px; margin-bottom: 1.5rem;">
                <div style="display: grid; grid-template-columns: auto 1fr; gap: 1rem; align-items: start;">
                    <div style="font-weight: bold; color: #2c3e50;">üìÖ –î–∞—Ç–∞:</div>
                    <div>${eventDate}</div>
                    
                    <div style="font-weight: bold; color: #2c3e50;">üìç –ü–ª–æ—â–∞–¥–∫–∞:</div>
                    <div>${event.venue || 'Usupovo Life Hall'}</div>
                    
                    <div style="font-weight: bold; color: #2c3e50;">‚è±Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</div>
                    <div>${event.duration || '120'} –º–∏–Ω—É—Ç</div>
                </div>
            </div>
            
            <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
            <div style="margin-bottom: 1.5rem;">
                <h4 style="color: #2c3e50; margin-bottom: 0.5rem;">üìù –û–ø–∏—Å–∞–Ω–∏–µ</h4>
                <p style="line-height: 1.6; color: #555;">${event.description || '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è...'}</p>
            </div>
            
            <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
            <div style="background: #fff3cd; padding: 1rem; border-radius: 8px; border: 1px solid #ffeaa7; margin-bottom: 1rem;">
                <h5 style="color: #856404; margin-bottom: 0.5rem;">‚ÑπÔ∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h5>
                <ul style="color: #856404; margin: 0; padding-left: 1.2rem;">
                    <li>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∑–∞ 30 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞</li>
                    <li>–î–µ—Ç–∏ –¥–æ 12 –ª–µ—Ç - –±–µ—Å–ø–ª–∞—Ç–Ω–æ (–≤ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–∏ –≤–∑—Ä–æ—Å–ª—ã—Ö)</li>
                    <li>–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ —Å—ä–µ–º–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞</li>
                </ul>
            </div>
        </div>
        
        <!-- –ö–Ω–æ–ø–∫–∏ - –í–°–ï–ì–î–ê –í–ò–î–ò–ú–´–ï -->
        <div class="form-actions" style="position: sticky; bottom: 0; background: white; padding: 1rem 0; border-top: 2px solid #eee; margin-top: 1rem;">
            <button onclick="App.closeModal()" class="btn-secondary">
                ‚ùå –ó–∞–∫—Ä—ã—Ç—å
            </button>
            <button onclick="App.openBookingModal(${event.id})" class="btn-primary">
                üé´ –ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã
            </button>
        </div>
    `;
    
    modal.style.display = 'block';
},
// –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ
async proceedToPayment() {
    const name = document.getElementById('customerName').value.trim();
    const email = document.getElementById('customerEmail').value.trim();
    const phone = document.getElementById('customerPhone').value.trim();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!name || !email || !phone) {
        alert('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
        return;
    }
    
    if (this.selectedSeats.size === 0) {
        alert('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –º–µ—Å—Ç–æ');
        return;
    }

    const seatLabels = Array.from(this.selectedSeats.keys());
    const total = Array.from(this.selectedSeats.values()).reduce((sum, seat) => sum + seat.price, 0);
    
    try {
        console.log('üí∞ –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂...');
        
        const response = await fetch(`${API_BASE}/create-payment`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                eventId: this.currentEventId,
                seats: seatLabels,
                customer: {
                    name: name,
                    email: email,
                    phone: phone
                },
                total: total
            })
        });
        
        const result = await response.json();
        
        if (result.success) {
            this.showPaymentPage(result);
        } else {
            throw new Error(result.error || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
        alert(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
},

// –ü–æ–∫–∞–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–ª–∞—Ç—ã
showPaymentPage(paymentData) {
    const modalBody = document.getElementById('modalBody');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º –ø–æ–∫–∞–∑–µ
    this.paymentButtonClicked = false;
    
    modalBody.innerHTML = `
        <div style="text-align: center; max-height: 70vh; overflow-y: auto;">
            <h3>üí≥ –û–ø–ª–∞—Ç–∞ –±–∏–ª–µ—Ç–æ–≤</h3>
            
            <div style="background: #fff3cd; padding: 1.5rem; border-radius: 10px; margin: 1rem 0; border: 1px solid #ffeaa7;">
                <h4>üí∞ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: ${paymentData.total} ‚ÇΩ</h4>
                <p>ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: <strong>${paymentData.bookingId}</strong></p>
            </div>
            
            <div style="margin: 2rem 0;">
                <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ —á–µ—Ä–µ–∑ –¢–∏–Ω—å–∫–æ—Ñ—Ñ</p>
                <button onclick="App.openPaymentLink('${paymentData.paymentUrl}')" class="btn-primary" id="paymentLinkButton">
                    üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ
                </button>
                <div id="paymentStatus" style="margin-top: 1rem; display: none;">
                    <div style="color: #27ae60; font-weight: bold;">
                        ‚úÖ –í—ã –ø–µ—Ä–µ—à–ª–∏ –∫ –æ–ø–ª–∞—Ç–µ
                    </div>
                    <small>–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É</small>
                </div>
            </div>
            
            <div style="background: #e8f4fd; padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                <h5>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h5>
                <ol style="text-align: left; margin: 1rem;">
                    <li>–ù–∞–∂–º–∏—Ç–µ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ"</li>
                    <li>–û–ø–ª–∞—Ç–∏—Ç–µ ${paymentData.total} ‚ÇΩ –≤ –±–∞–Ω–∫–µ –¢–∏–Ω—å–∫–æ—Ñ—Ñ</li>
                    <li>–í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É</li>
                    <li>–ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É"</li>
                </ol>
            </div>
            
            <div style="color: #666; font-size: 0.9rem; margin: 1rem 0;">
                ‚è±Ô∏è –£ –≤–∞—Å –µ—Å—Ç—å 30 –º–∏–Ω—É—Ç –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
            </div>
        </div>
        
        <div class="form-actions">
            <button onclick="App.backToCustomerForm()" class="btn-secondary">
                ‚Äπ –ù–∞–∑–∞–¥
            </button>
            <button onclick="App.confirmPayment('${paymentData.paymentId}')" class="btn-primary" id="confirmPaymentButton" disabled>
                ‚è≥ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É
            </button>
        </div>
    `;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º paymentId –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    this.currentPaymentId = paymentData.paymentId;
},

// –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Å—ã–ª–∫–∏ –æ–ø–ª–∞—Ç—ã –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
openPaymentLink(paymentUrl) {
    console.log('üîó –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –æ–ø–ª–∞—Ç—ã');
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
    window.open(paymentUrl, '_blank');
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    this.paymentButtonClicked = true;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    const confirmButton = document.getElementById('confirmPaymentButton');
    const paymentStatus = document.getElementById('paymentStatus');
    const paymentLinkButton = document.getElementById('paymentLinkButton');
    
    if (confirmButton) {
        confirmButton.disabled = false;
        confirmButton.innerHTML = '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É';
        confirmButton.style.background = '#27ae60';
    }
    
    if (paymentStatus) {
        paymentStatus.style.display = 'block';
    }
    
    if (paymentLinkButton) {
        paymentLinkButton.disabled = true;
        paymentLinkButton.innerHTML = '‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω';
        paymentLinkButton.style.background = '#95a5a6';
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    this.showNotification('‚úÖ –í—ã –ø–µ—Ä–µ—à–ª–∏ –∫ –æ–ø–ª–∞—Ç–µ. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.', 'success');
},

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç)
showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-message">${message}</span>
            <button class="notification-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 5000);
},

// –ù–∞–∑–∞–¥ –∫ —Ñ–æ—Ä–º–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
backToCustomerForm() {
    this.goToCustomerForm();
},

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
async confirmPayment(paymentId) {
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if (!this.paymentButtonClicked) {
        alert('‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –±–∞–Ω–∫');
        return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    const confirmButton = document.getElementById('confirmPaymentButton');
    if (confirmButton) {
        confirmButton.disabled = true;
        confirmButton.innerHTML = '‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–ª–∞—Ç—É...';
        confirmButton.style.background = '#95a5a6';
    }
    
    try {
        console.log('üîÑ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–ø–ª–∞—Ç—É:', paymentId);
        
        const response = await fetch(`${API_BASE}/confirm-payment`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                paymentId: paymentId
            })
        });
        
        const result = await response.json();
        
        if (result.success) {
            // –í–ê–†–ò–ê–ù–¢ 1: –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ pending booking (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
            this.showBookingSuccess({
                bookingId: result.bookingId,
                customerName: result.customerName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                customerEmail: result.customerEmail || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                customerPhone: result.customerPhone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                seats: Array.from(this.selectedSeats.values()),
                total: result.total,
                message: result.message
            });
            
        } else {
            throw new Error(result.error || '–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã:', error);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if (confirmButton) {
            confirmButton.disabled = false;
            confirmButton.innerHTML = '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É';
            confirmButton.style.background = '#27ae60';
        }
        
        alert(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
},

// –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –º–µ—Å—Ç
backToSeatSelection() {
    this.closeModal();
    setTimeout(() => {
        this.openBookingModal(1); // –≤—Ä–µ–º–µ–Ω–Ω–æ
    }, 300);
},

    // –§–∏–Ω–∞–ª—å–Ω–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    async finalBooking() {
        const name = document.getElementById('customerName').value.trim();
        const email = document.getElementById('customerEmail').value.trim();
        const phone = document.getElementById('customerPhone').value.trim();
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!name || !email || !phone) {
            alert('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            return;
        }
        
        if (this.selectedSeats.size === 0) {
            alert('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –º–µ—Å—Ç–æ');
            return;
        }
        
        const seatLabels = Array.from(this.selectedSeats.keys());
        
        try {
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
            
            const response = await fetch(`${API_BASE}/book`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    eventId: this.currentEventId,
                    seats: seatLabels,
                    customer: {
                        name: name,
                        email: email,
                        phone: phone
                    }
                })
            });
            
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error || `HTTP error! status: ${response.status}`);
            }
            
            const result = await response.json();
            console.log('‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', result);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            this.showBookingSuccess({
                bookingId: result.bookingId,
                customerName: name,
                customerEmail: email,
                customerPhone: phone,
                seats: Array.from(this.selectedSeats.values()),
                total: result.total,
                message: result.message
            });
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
            alert(`‚ùå –û—à–∏–±–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
        }
    },

    // –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
    showBookingError(message) {
        const modalBody = document.getElementById('modalBody');
        modalBody.innerHTML = `
            <div style="text-align: center; padding: 2rem;">
                <div style="font-size: 3rem; color: #e74c3c;">‚ùå</div>
                <h4>–û—à–∏–±–∫–∞</h4>
                <p>${message}</p>
                <button onclick="App.closeModal()" class="btn-primary" style="margin-top: 1rem;">
                    –ó–∞–∫—Ä—ã—Ç—å
                </button>
            </div>
        `;
    },
// –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
getCurrentEventName() {
    if (this.currentEventId && window.allEvents) {
        const event = window.allEvents.find(e => e.id == this.currentEventId);
        return event ? event.name : '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ';
    }
    
    // Fallback: –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ DOM
    const eventCards = document.querySelectorAll('.event-card');
    for (let card of eventCards) {
        if (card.dataset.eventId == this.currentEventId) {
            const title = card.querySelector('h3');
            return title ? title.textContent : '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ';
        }
    }
    
    return '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ';
},
// –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ø–µ—à–Ω–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –±–∏–ª–µ—Ç–æ–º
showBookingSuccess(bookingData) {
    const modalBody = document.getElementById('modalBody');
    this.lastBookingData = bookingData;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
    const qrData = this.generateQRData(bookingData);
    
    modalBody.innerHTML = `
        <div class="booking-success">
            <div style="text-align: center; color: #27ae60; font-size: 4rem;">‚úÖ</div>
            <h4 style="text-align: center; color: #27ae60;">üéâ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!</h4>
            
            <!-- –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø—Ä–æ —Å–∫—Ä–∏–Ω—à–æ—Ç -->
            <div style="text-align: center; margin: 1rem 0; padding: 1rem; background: #e8f4fd; border-radius: 8px; border-left: 4px solid #3498db;">
                <p style="margin: 0; color: #2c3e50; font-weight: bold;">
                    üì± –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å
                </p>
            </div>
            
            <!-- –ë–∏–ª–µ—Ç - –ê–î–ê–ü–¢–ò–í–ù–´–ô -->
            <div class="ticket" style="border: 3px solid #3498db; border-radius: 15px; padding: 0; margin: 1.5rem 0; background: white; color: #2c3e50; overflow: hidden; box-shadow: 0 8px 25px rgba(0,0,0,0.1); max-width: 100%;">
                <!-- –®–∞–ø–∫–∞ –±–∏–ª–µ—Ç–∞ -->
                <div style="background: linear-gradient(135deg, #3498db, #2980b9); color: white; padding: 1rem; text-align: center;">
                    <h3 style="margin: 0; font-size: clamp(1.2rem, 4vw, 1.5rem);">üé≠ Usupovo Life Hall</h3>
                    <p style="margin: 0.5rem 0 0 0; opacity: 0.9; font-size: clamp(0.8rem, 3vw, 0.9rem);">–≠–õ–ï–ö–¢–†–û–ù–ù–´–ô –ë–ò–õ–ï–¢</p>
                </div>
                
                <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –ê–î–ê–ü–¢–ò–í–ù–ê–Ø -->
                <div style="padding: 1rem;">
                    <div style="display: flex; flex-direction: column; gap: 1rem;">
                        <!-- QR-–∫–æ–¥ - –ø–æ —Ü–µ–Ω—Ç—Ä—É –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö -->
                        <div style="text-align: center;">
                            <div id="qrcode" style="background: white; padding: 10px; border-radius: 8px; border: 2px solid #f0f0f0; display: inline-block; max-width: 100%;"></div>
                        </div>
                        
                        <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏–ª–µ—Ç–µ -->
                        <div>
                            <div style="margin-bottom: 0.8rem; padding-bottom: 0.5rem; border-bottom: 1px solid #f0f0f0;">
                                <strong style="color: #3498db; font-size: clamp(0.9rem, 3vw, 1rem);">–ú–ï–†–û–ü–†–ò–Ø–¢–ò–ï:</strong><br>
                                <span style="font-size: clamp(0.8rem, 3vw, 0.9rem);">${this.currentEventName || '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ'}</span>
                            </div>
                            
                            <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ - –°–¢–ï–ö –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö -->
                            <div style="display: flex; flex-direction: column; gap: 0.8rem; margin-bottom: 1rem;">
                                <!-- –ò–º—è -->
                                <div>
                                    <strong style="color: #3498db; font-size: clamp(0.9rem, 3vw, 1rem);">–ò–ú–Ø:</strong><br>
                                    <span style="font-size: clamp(0.8rem, 3vw, 0.9rem);">${bookingData.customerName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                                </div>
                                
                                <!-- –¢–µ–ª–µ—Ñ–æ–Ω –∏ Email –≤ —Ä—è–¥ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ, –≤ —Å—Ç–æ–ª–±–∏–∫ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö -->
                                <div style="display: grid; grid-template-columns: 1fr; gap: 0.8rem;">
                                    <div>
                                        <strong style="color: #3498db; font-size: clamp(0.9rem, 3vw, 1rem);">–¢–ï–õ–ï–§–û–ù:</strong><br>
                                        <span style="font-size: clamp(0.8rem, 3vw, 0.9rem);">${bookingData.customerPhone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                                    </div>
                                    
                                    ${bookingData.customerEmail ? `
                                    <div>
                                        <strong style="color: #3498db; font-size: clamp(0.9rem, 3vw, 1rem);">EMAIL:</strong><br>
                                        <span style="font-size: clamp(0.8rem, 3vw, 0.9rem);">${bookingData.customerEmail}</span>
                                    </div>
                                    ` : ''}
                                </div>
                                
                                <!-- –ú–µ—Å—Ç–∞ -->
                                <div>
                                    <strong style="color: #3498db; font-size: clamp(0.9rem, 3vw, 1rem);">–ú–ï–°–¢–ê:</strong><br>
                                    <span style="font-size: clamp(0.8rem, 3vw, 0.9rem);">${bookingData.seats.map(seat => `${seat.label} (${seat.type})`).join(', ')}</span>
                                </div>
                                
                                <!-- –ù–æ–º–µ—Ä –±—Ä–æ–Ω–∏ –∏ —Å—É–º–º–∞ –≤ —Ä—è–¥ -->
                                <div style="display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 0.5rem;">
                                    <div>
                                        <strong style="color: #3498db; font-size: clamp(0.9rem, 3vw, 1rem);">–ù–û–ú–ï–† –ë–†–û–ù–ò:</strong><br>
                                        <span style="font-size: clamp(0.8rem, 3vw, 0.9rem);">${bookingData.bookingId}</span>
                                    </div>
                                    
                                    <!-- –°—É–º–º–∞ -->
                                    <div style="text-align: right;">
                                        <div style="font-size: clamp(1.2rem, 4vw, 1.4rem); font-weight: bold; color: #27ae60;">
                                            üí∞ ${bookingData.total} ‚ÇΩ
                                        </div>
                                        <small style="color: #7f8c8d; font-size: clamp(0.7rem, 2vw, 0.8rem);">–û–ø–ª–∞—á–µ–Ω–æ</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- –ü—Ä–∞–≤–∏–ª–∞ –∑–∞–ª–∞ -->
                    <div style="text-align: center; margin-top: 1rem; padding-top: 1rem; border-top: 2px dashed #3498db;">
                        <div style="display: flex; justify-content: center; gap: 0.8rem; margin-bottom: 0.5rem;">
                            <img src="images/icons.png" alt="–ü—Ä–∞–≤–∏–ª–∞ –∑–∞–ª–∞" style="height: 24px; max-width: 100%;" title="–ü—Ä–∞–≤–∏–ª–∞ –∑–∞–ª–∞: –ë–µ–∑ –µ–¥—ã –∏ –Ω–∞–ø–∏—Ç–∫–æ–≤, –ë–µ–∑ –æ—Ä—É–∂–∏—è, –ë–µ–∑ –∫—É—Ä–µ–Ω–∏—è">
                        </div>
                        <small style="color: #7f8c8d; font-size: clamp(0.7rem, 2vw, 0.8rem);">–ü—Ä–∞–≤–∏–ª–∞ –∑–∞–ª–∞</small>
                    </div>
                </div>
                
                <!-- –ü–æ–¥–≤–∞–ª –±–∏–ª–µ—Ç–∞ -->
                <div style="background: #f8f9fa; padding: 0.8rem; border-top: 1px solid #e9ecef;">
                    <div style="text-align: center; font-size: clamp(0.7rem, 2vw, 0.8rem); color: #6c757d; line-height: 1.4;">
                        <p style="margin: 0 0 0.3rem 0;">üìç –≥.–æ. –î–æ–º–æ–¥–µ–¥–æ–≤–æ, –ö–ü "–Æ—Å—É–ø–æ–≤–æ –õ–∞–π—Ñ –ü–∞—Ä–∫", —É–ª. –†–∞—Å—Å–≤–µ—Ç–Ω–∞—è, 8</p>
                        <p style="margin: 0 0 0.3rem 0;">üìû +7 (985) 834-94-94</p>
                        <p style="margin: 0; font-weight: bold;">–ü—Ä–µ–¥—ä—è–≤–∏—Ç–µ QR-–∫–æ–¥ –Ω–∞ –≤—Ö–æ–¥–µ</p>
                    </div>
                </div>
            </div>
            
            <div class="success-actions" style="text-align: center; margin-top: 2rem;">
                <button onclick="App.printTicket()" class="btn-secondary" style="margin-right: 0.5rem; margin-bottom: 0.5rem; padding: 0.8rem 1.2rem; font-size: clamp(0.9rem, 3vw, 1rem);">
                    üñ®Ô∏è –†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å
                </button>
                <button onclick="App.closeModal()" class="btn-primary" style="padding: 0.8rem 1.2rem; font-size: clamp(0.9rem, 3vw, 1rem);">
                    üëç –û—Ç–ª–∏—á–Ω–æ!
                </button>
            </div>
        </div>
    `;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ –ø–æ—Å–ª–µ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ DOM
    setTimeout(() => {
        this.generateQRCode(qrData);
    }, 100);
},

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è QR-–∫–æ–¥–∞
generateQRData(bookingData) {
    const verificationUrl = `${window.location.origin}/verify.html?ticket=${bookingData.bookingId}`;
    return verificationUrl;
},

// –î–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ qrcode-generator
generateQRCode(data) {
    const qrElement = document.getElementById('qrcode');
    if (!qrElement) return;

    qrElement.innerHTML = '';

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
    const qrcode = window.qrcode;
    
    if (!qrcode) {
        console.error('qrcode library not found');
        return;
    }

    try {
        // –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥
        const qr = qrcode(0, 'M');
        qr.addData(data);
        qr.make();
        
        // –°–æ–∑–¥–∞–µ–º canvas
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        const size = 120;
        canvas.width = size;
        canvas.height = size;
        
        // –û—á–∏—â–∞–µ–º canvas
        ctx.fillStyle = '#FFFFFF';
        ctx.fillRect(0, 0, size, size);
        
        // –†–∏—Å—É–µ–º QR-–∫–æ–¥
        const cellSize = size / qr.getModuleCount();
        ctx.fillStyle = '#000000';
        
        for (let row = 0; row < qr.getModuleCount(); row++) {
            for (let col = 0; col < qr.getModuleCount(); col++) {
                if (qr.isDark(row, col)) {
                    ctx.fillRect(
                        col * cellSize,
                        row * cellSize,
                        cellSize,
                        cellSize
                    );
                }
            }
        }
        
        qrElement.appendChild(canvas);
        console.log('QR Code generated successfully');

    } catch (error) {
        console.error('QR Code generation failed:', error);
        this.showQRFallback(qrElement, data);
    }
},

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø–∞—Å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
showQRFallback(qrElement, data) {
    const ticketId = data.split('?ticket=')[1] || '–ë–∏–ª–µ—Ç';
    
    qrElement.innerHTML = `
        <div style="
            width: 120px; 
            height: 120px; 
            background: white; 
            display: flex; 
            flex-direction: column; 
            align-items: center; 
            justify-content: center; 
            border: 2px solid #3498db; 
            border-radius: 8px;
            text-align: center;
            padding: 10px;
            color: #000000;
        ">
            <div style="font-size: 24px;">üì±</div>
            <div style="font-size: 10px; margin-top: 5px; color: #000000; font-weight: bold;">
                ${ticketId}
            </div>
        </div>
    `;
},

// –ü–µ—á–∞—Ç—å –±–∏–ª–µ—Ç–∞ - –ö–û–ú–ü–ê–ö–¢–ù–ê–Ø –í–ï–†–°–ò–Ø
printTicket() {
    const ticket = document.querySelector('.ticket');
    if (!ticket) return;

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞
    const qrData = this.generateQRData(this.lastBookingData);
    
    const printWindow = window.open('', '_blank');
    printWindow.document.write(`
        <html>
            <head>
                <title>–ë–∏–ª–µ—Ç - Usupovo Life Hall</title>
                <style>
                    @media print {
                        @page {
                            size: A5 landscape;
                            margin: 0.3cm;
                        }
                        body { 
                            margin: 0; 
                            padding: 0;
                            font-family: Arial, sans-serif;
                            -webkit-print-color-adjust: exact;
                        }
                    }
                    
                    * {
                        margin: 0;
                        padding: 0;
                        box-sizing: border-box;
                    }
                    
                    body { 
                        font-family: Arial, sans-serif; 
                        margin: 0;
                        padding: 0.3cm;
                        background: white;
                        width: 100vw;
                        height: 100vh;
                    }
                    
                    .print-ticket { 
                        width: 100%;
                        height: 10.5cm; /* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –ê5 */
                        border: 2px solid #3498db; 
                        border-radius: 8px; 
                        background: white;
                        color: #2c3e50;
                        overflow: hidden;
                        display: flex;
                        flex-direction: column;
                    }
                    
                    .ticket-header {
                        background: linear-gradient(135deg, #3498db, #2980b9); 
                        color: white; 
                        padding: 0.4rem 0.6rem;
                        text-align: center;
                        flex-shrink: 0;
                    }
                    
                    .ticket-main {
                        display: flex;
                        flex: 1;
                        min-height: 0;
                    }
                    
                    .qr-section {
                        flex: 0 0 4.5cm;
                        padding: 0.5rem;
                        display: flex;
                        flex-direction: column;
                        align-items: center;
                        justify-content: center;
                        border-right: 1px dashed #3498db;
                    }
                    
                    .qr-container { 
                        background: white; 
                        padding: 5px; 
                        border-radius: 5px; 
                        border: 1px solid #f0f0f0;
                        margin-bottom: 0.5rem;
                    }
                    
                    .info-section {
                        flex: 1;
                        padding: 0.5rem;
                        font-size: 12px;
                        display: flex;
                        flex-direction: column;
                    }
                    
                    .info-grid {
                        flex: 1;
                        display: grid;
                        grid-template-columns: 1fr 1fr;
                        gap: 0.3rem;
                    }
                    
                    .info-item {
                        padding: 0.2rem;
                    }
                    
                    .info-label {
                        font-weight: bold;
                        color: #3498db;
                        font-size: 10px;
                        margin-bottom: 0.1rem;
                    }
                    
                    .info-value {
                        font-size: 11px;
                        line-height: 1.2;
                    }
                    
                    .ticket-footer {
                        background: #f8f9fa; 
                        padding: 0.4rem 0.6rem;
                        border-top: 1px solid #e9ecef;
                        font-size: 9px;
                        text-align: center;
                        color: #6c757d;
                        flex-shrink: 0;
                    }
                    
                    .rules-amount {
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        margin-top: 0.3rem;
                        padding-top: 0.3rem;
                        border-top: 1px dashed #3498db;
                    }
                    
                    .amount {
                        font-size: 12px;
                        font-weight: bold;
                        color: #27ae60;
                    }
                    
                    .rules-icons img {
                        height: 18px;
                    }
                    
                    h2 {
                        font-size: 14px;
                        margin: 0;
                    }
                    
                    .header-subtitle {
                        font-size: 10px;
                        opacity: 0.9;
                        margin-top: 0.1rem;
                    }
                    
                    /* –°—É–º–º–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ */
                    .amount-in-info {
                        font-size: 12px;
                        font-weight: bold;
                        color: #27ae60;
                        text-align: center;
                        margin-top: 0.3rem;
                    }
                </style>
                <script src="https://cdn.jsdelivr.net/npm/qrcode-generator@1.4.4/qrcode.min.js"><\/script>
            </head>
            <body>
                <div class="print-ticket">
                    <!-- –®–∞–ø–∫–∞ -->
                    <div class="ticket-header">
                        <h2>üé≠ Usupovo Life Hall</h2>
                        <div class="header-subtitle">–≠–õ–ï–ö–¢–†–û–ù–ù–´–ô –ë–ò–õ–ï–¢</div>
                    </div>
                    
                    <!-- –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ -->
                    <div class="ticket-main">
                        <!-- QR-–∫–æ–¥ -->
                        <div class="qr-section">
                            <div class="qr-container">
                                <div id="qrcode"></div>
                            </div>
                            <!-- –£–ë–†–ê–õ–ò –°–£–ú–ú–£ –û–¢–°–Æ–î–ê -->
                        </div>
                        
                        <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                        <div class="info-section">
                            <div class="info-grid">
                                <div class="info-item">
                                    <div class="info-label">–ú–ï–†–û–ü–†–ò–Ø–¢–ò–ï</div>
                                    <div class="info-value">${this.currentEventName || '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                                </div>
                                
                                <div class="info-item">
                                    <div class="info-label">–ò–ú–Ø</div>
                                    <div class="info-value">${this.lastBookingData.customerName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                                </div>
                                
                                <div class="info-item">
                                    <div class="info-label">–¢–ï–õ–ï–§–û–ù</div>
                                    <div class="info-value">${this.lastBookingData.customerPhone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                                </div>
                                
                                ${this.lastBookingData.customerEmail ? `
                                <div class="info-item">
                                    <div class="info-label">EMAIL</div>
                                    <div class="info-value">${this.lastBookingData.customerEmail}</div>
                                </div>
                                ` : ''}
                                
                                <div class="info-item" style="grid-column: span 2;">
                                    <div class="info-label">–ú–ï–°–¢–ê</div>
                                    <div class="info-value">${this.lastBookingData.seats.map(seat => `${seat.label} (${seat.type})`).join(', ')}</div>
                                </div>
                                
                                <div class="info-item" style="grid-column: span 2;">
                                    <div class="info-label">–ù–û–ú–ï–† –ë–†–û–ù–ò</div>
                                    <div class="info-value">${this.lastBookingData.bookingId}</div>
                                </div>
                                
                                <!-- –°–£–ú–ú–ê –ü–ï–†–ï–ú–ï–©–ï–ù–ê –°–Æ–î–ê -->
                                <div class="info-item" style="grid-column: span 2; text-align: center; margin-top: 0.2rem;">
                                    <div class="amount-in-info">
                                        üí∞ ${this.lastBookingData.total} ‚ÇΩ<br>
                                        <small style="color: #7f8c8d; font-weight: normal;">–û–ø–ª–∞—á–µ–Ω–æ</small>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- –ü—Ä–∞–≤–∏–ª–∞ -->
                            <div class="rules-amount">
                                <div class="rules-icons">
                                    <img src="${window.location.origin}/images/icons.png" alt="–ü—Ä–∞–≤–∏–ª–∞ –∑–∞–ª–∞">
                                </div>
                                <div style="font-size: 9px; color: #7f8c8d;">
                                    –ü—Ä–∞–≤–∏–ª–∞ –∑–∞–ª–∞
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- –ü–æ–¥–≤–∞–ª -->
                    <div class="ticket-footer">
                        <div>üìç –≥.–æ. –î–æ–º–æ–¥–µ–¥–æ–≤–æ, –ö–ü "–Æ—Å—É–ø–æ–≤–æ –õ–∞–π—Ñ –ü–∞—Ä–∫", —É–ª. –†–∞—Å—Å–≤–µ—Ç–Ω–∞—è, 8</div>
                        <div>üìû +7 (985) 834-94-94 | –ü—Ä–µ–¥—ä—è–≤–∏—Ç–µ QR-–∫–æ–¥ –Ω–∞ –≤—Ö–æ–¥–µ</div>
                    </div>
                </div>
                
                <script>
                    // –†–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ –¥–ª—è –ø–µ—á–∞—Ç–∏
                    setTimeout(function() {
                        generateQRForPrint('${qrData}');
                    }, 100);
                    
                    function generateQRForPrint(data) {
                        const qrElement = document.getElementById('qrcode');
                        if (!qrElement || !window.qrcode) return;
                        
                        try {
                            const qr = qrcode(0, 'L');
                            qr.addData(data);
                            qr.make();
                            
                            const canvas = document.createElement('canvas');
                            const ctx = canvas.getContext('2d');
                            const size = 90;
                            canvas.width = size;
                            canvas.height = size;
                            
                            // –û—á–∏—â–∞–µ–º canvas
                            ctx.fillStyle = '#FFFFFF';
                            ctx.fillRect(0, 0, size, size);
                            
                            // –†–∏—Å—É–µ–º QR-–∫–æ–¥
                            const cellSize = size / qr.getModuleCount();
                            ctx.fillStyle = '#000000';
                            
                            for (let row = 0; row < qr.getModuleCount(); row++) {
                                for (let col = 0; col < qr.getModuleCount(); col++) {
                                    if (qr.isDark(row, col)) {
                                        ctx.fillRect(
                                            col * cellSize,
                                            row * cellSize,
                                            cellSize,
                                            cellSize
                                        );
                                    }
                                }
                            }
                            
                            // –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
                            qrElement.innerHTML = '';
                            qrElement.appendChild(canvas);
                            
                        } catch (error) {
                            console.error('Print QR error:', error);
                        }
                    }
                <\/script>
            </body>
        </html>
    `);
    printWindow.document.close();
    
    // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é QR-–∫–æ–¥–∞ –ø–µ—Ä–µ–¥ –ø–µ—á–∞—Ç–∏
    setTimeout(() => {
        printWindow.print();
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –ø–æ—Å–ª–µ –ø–µ—á–∞—Ç–∏
        setTimeout(() => {
            printWindow.close();
        }, 500);
    }, 500);
},
    
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    getEventById(eventId) {
        return {
            id: eventId,
            name: `–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ #${eventId}`,
            date: new Date().toISOString()
        };
    },
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤
    getRussianPlural(number) {
        if (number === 1) return '';
        if (number >= 2 && number <= 4) return '–∞';
        return '–æ–≤';
    },
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeModal() {
        document.getElementById('bookingModal').style.display = 'none';
    }
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function scrollToEvents() {
    document.getElementById('events').scrollIntoView({ 
        behavior: 'smooth' 
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ–≥–¥–∞ DOM –∑–∞–≥—Ä—É–∂–µ–Ω
document.addEventListener('DOMContentLoaded', function() {
    App.init();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(e) {
    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', e.error);
});
